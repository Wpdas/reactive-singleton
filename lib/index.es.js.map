{"version":3,"file":"index.es.js","sources":["../node_modules/tslib/tslib.es6.js","../src/observable-keys.ts","../src/singleton-keys.ts","../src/singleton-context.ts","../src/singleton-provider.tsx","../src/observable.ts","../src/unique-id.ts","../src/singleton-manager.ts","../src/create-singleton.ts","../src/get-singleton-manager.ts","../src/use-singleton-props.tsx","../src/use-singleton-status.tsx","../src/use-singleton-observable.tsx","../src/use-was-data-updated.tsx"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import Observable from './observable'\nimport { Status } from './types'\n\n// Controls the observables (for status) that are being used inside every Singleton class\nlet observableKeys = {}\n\n/**\n * Get singleton's observable.\n * @param {string} key\n */\nexport const getObservable = (key: string) =>\n  observableKeys[key] as Observable<Status>\n\n/**\n * Add new singleton's observable\n * @param {string} key\n * @param {Observable<Status>} observable\n */\nexport const addObservable = (key: string, observable: Observable<Status>) => {\n  observableKeys = {\n    ...observableKeys,\n    [key]: observable,\n  }\n}\n\n/**\n * Get all singleton's observables keys\n */\nexport const getObservablesKeys = () => Object.keys(observableKeys)\n","import { SingletonManager } from './singleton-manager'\n\nlet singletonManagerKeys = {}\n\n/**\n * Add new singleton\n * @param {string} key\n * @param {SingletonManager} singletonManager\n */\nexport const addSingletonManager = (\n  key: string,\n  singletonManager: SingletonManager\n) => {\n  singletonManagerKeys = {\n    ...singletonManagerKeys,\n    [key]: singletonManager,\n  }\n}\n\n/**\n * Get singleton\n * @param {string} key\n */\nexport const getSingletonManager = (key: string) =>\n  singletonManagerKeys[key] as SingletonManager\n\n/**\n * Get all singleton managers keys\n */\nexport const getSingletonManagersKeys = () => Object.keys(singletonManagerKeys)\n","import { createContext } from 'react'\nimport { Status } from './types'\n\nexport type ProviderStatus = Status | 'next_status'\n\ninterface SingletonContextProps {\n  // Singleton's provider status (global)\n  status: ProviderStatus\n}\n\nexport const defaultProps: SingletonContextProps = {\n  status: 'ready',\n}\n\nexport const SingletonContext = createContext<SingletonContextProps>(\n  defaultProps\n)\n","import React, { useState, useEffect } from 'react'\nimport { getObservablesKeys, getObservable } from './observable-keys'\nimport { getSingletonManagersKeys, getSingletonManager } from './singleton-keys'\nimport {\n  ProviderStatus,\n  defaultProps,\n  SingletonContext,\n} from './singleton-context'\n\ninterface SingletonProviderProps {\n  readonly children: React.ReactNode\n}\n\nexport const SingletonProvider = ({ children }: SingletonProviderProps) => {\n  const [status, setStatus] = useState<ProviderStatus>(defaultProps.status)\n\n  // Watch all the singletons status. This is used to turn every singleton reactive\n  useEffect(() => {\n    const observablesKeys = getObservablesKeys()\n    observablesKeys.forEach((observableKey) => {\n      const currentObservable = getObservable(observableKey)\n      currentObservable.subscribe((statusData) => {\n        if (status === statusData) {\n          // Make re-render if detects that another Singleton is updating its status\n          setStatus('next_status')\n        }\n        setStatus(statusData)\n      })\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  // Check if some Singleton has started a updating process (when updates are applied at the\n  // same time a component is ready)\n  useEffect(() => {\n    const singletonsKeys = getSingletonManagersKeys()\n    singletonsKeys.forEach((singletonKey) => {\n      const currentSingletonManager = getSingletonManager(singletonKey)\n      if (currentSingletonManager.status !== 'ready') {\n        setStatus(currentSingletonManager.status)\n      }\n    })\n  }, [])\n\n  return (\n    <SingletonContext.Provider value={{ status }}>\n      {children}\n    </SingletonContext.Provider>\n  )\n}\n","class Observable<D> {\n  private observers: Array<(data: D) => void>\n\n  constructor() {\n    this.observers = []\n  }\n\n  subscribe(handler: (data: D) => void) {\n    this.observers.push(handler)\n  }\n\n  unsubbscribe(handler: (data: D) => void) {\n    this.observers = this.observers.filter(\n      (subscriber) => subscriber !== handler\n    )\n  }\n\n  notify(data: D) {\n    this.observers.forEach((observer) => observer(data))\n  }\n}\n\nexport default Observable\n","/**\n * Generates a unique ID\n */\nconst uniqueId = () =>\n  `_${Math.random()\n    .toString(36)\n    .substr(2, 9)}`\n\nexport default uniqueId\n","import Observable from './observable'\nimport { Status } from './types'\nimport { addObservable } from './observable-keys'\nimport uniqueId from './unique-id'\n\n// Internal Class to control the Singletons classes\nexport class SingletonManager {\n  private singletonClass: any\n\n  public status: Status = 'ready'\n\n  public key = uniqueId()\n\n  constructor() {\n    // Create its observable status\n    addObservable(this.key, new Observable<Status>())\n  }\n\n  public setValue<C>(singletonClass: C) {\n    const ref = singletonClass\n    // const properties = Object.getOwnPropertyNames(ref)\n    // if (properties.indexOf('getInstance') < 0) {\n    //   throw new Error(\n    //     'You must create a public static method called getInstance for initiate the Singleton. Please, check out how to implement a Singleton properly!'\n    //   )\n    // }\n\n    this.singletonClass = ref\n  }\n\n  public getProps() {\n    return {\n      singleton: this.singletonClass,\n      status: this.status,\n      key: this.key,\n    }\n  }\n}\n","import { SingletonManager } from './singleton-manager'\nimport { getObservable } from './observable-keys'\nimport { addSingletonManager } from './singleton-keys'\n\ntype UseWatcher = (done: () => void) => void\n\nexport function createSingleton() {\n  const newSingleton = new SingletonManager()\n\n  return {\n    /**\n     * Method/Function that should be reactive. When the desired changes are done, you\n     * should call done method, so that, React will know that a change happened\n     */\n    useWatcher: (method: UseWatcher) => {\n      const observable = getObservable(newSingleton.key)\n      newSingleton.status = 'in_progress'\n      observable.notify(newSingleton.status)\n      method(() => {\n        newSingleton.status = 'ready'\n        observable.notify(newSingleton.status)\n      })\n    },\n\n    /**\n     * Set the Singleton Class / Object\n     */\n    setValue<C>(classValue: C) {\n      newSingleton.setValue(classValue)\n      addSingletonManager((classValue as any).name, newSingleton)\n    },\n  }\n}\n","import { getSingletonManager as getSM } from './singleton-keys'\nimport { getObservable } from './observable-keys'\nimport { Status } from './types'\n\n/**\n * Gets a singleton manager (SingletonManager) with its props: singleton itself, status and key\n *\n * @param {C} singletonManager Singleton class or object\n */\nexport function getSingletonManager<C>(singletonManager: C) {\n  const singletonKey = (singletonManager as any).name\n  const currentSingleton = getSM(singletonKey)\n\n  if (!currentSingleton) {\n    throw new Error(\n      `${singletonKey} singleton was not correctly initialized or doesn't exist! Please, create your Singleton using createSingleton()'s setValue.`\n    )\n  }\n\n  const { singleton, status, key } = currentSingleton!.getProps()\n\n  return {\n    singleton: singleton as C,\n    status: status as Status,\n    observable: getObservable(key),\n  }\n}\n","import { useContext } from 'react'\nimport { SingletonContext } from './singleton-context'\nimport { getSingletonManager } from './get-singleton-manager'\n\n/**\n * Use Singleton Props hook. Returns basic Singleton's props\n *\n * You will be provided with the following props:\n * - status: The status of singleton process. Will return 'in_progress' if there are any process\n * in progress, e.g: promises, await, fetch, etc. Will return 'ready' when all the process\n * are done and all internal singleton's props are set);\n * - statusObservable: This is basically an observable that will notify the status data for its subscribers. You\n * may want use this in some custom service/hook)\n *\n * @param singletonClass\n */\nexport function useSingletonProps<C>(singletonClass: C) {\n  useContext(SingletonContext)\n  const { status, observable } = getSingletonManager(singletonClass)\n\n  return {\n    status,\n    statusObservable: observable,\n  }\n}\n","import { useSingletonProps } from './use-singleton-props'\n\n/**\n * Use Singleton Status hook. Returns the status of the desired Singleton created previously using\n * createSingleton hook.\n *\n * @param singletonClass\n */\nexport function useSingletonStatus<C>(singletonClass: C) {\n  const { status } = useSingletonProps<C>(singletonClass)\n  return status\n}\n","import { useSingletonProps } from './use-singleton-props'\n\n/**\n * Use Singleton Observable hook. Returns the Singleton's status observable\n *\n * @param singletonClass\n */\nexport function useSingletonObservable<C>(singletonClass: C) {\n  const { statusObservable } = useSingletonProps<C>(singletonClass)\n  return statusObservable\n}\n","import { useEffect, useState } from 'react'\nimport { useSingletonObservable } from './use-singleton-observable'\nimport { Status } from './types'\n\n/**\n * Use Was Data Updated hook. Informs if the Singleton is still using its default values\n *\n * @param singletonClass\n */\nexport function useWasDataUpdated<C>(singletonClass: C) {\n  const observable = useSingletonObservable(singletonClass)\n  const [hasUpdatedData, setHasUpdatedData] = useState(false)\n\n  useEffect(() => {\n    const handleOnUpdate = (status: Status) => {\n      if (status === 'ready') {\n        setHasUpdatedData(true)\n        observable.unsubbscribe(handleOnUpdate)\n      }\n    }\n\n    observable.subscribe(handleOnUpdate)\n    return () => {\n      observable.unsubbscribe(handleOnUpdate)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return hasUpdatedData\n}\n"],"names":["getSingletonManager","getSM"],"mappings":"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"}